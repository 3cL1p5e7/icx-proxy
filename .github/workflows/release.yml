name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [ '1.55.0' ]
        os: [ ubuntu-latest, macos-latest ]

    steps:
    - uses: actions/checkout@v2

    - name: Setup environment variables
      run: |
        echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
        echo "OPENSSL_STATIC=yes" >> $GITHUB_ENV

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
      if: contains(matrix.os, 'macos')

    - name: Install Rust toolchain
      uses: dfinity/rust-musl-action@master
      if: contains(matrix.os, 'ubuntu')

    - name: Prepare cargo-deb
      run: |
        rustup toolchain add 1.58.1
        cargo +1.58.1 install cargo-deb
      if: contains(matrix.os, 'ubuntu')

    - name: Linux build
      env:
        RUSTFLAGS: --remap-path-prefix=${GITHUB_WORKSPACE}=/builds/dfinity
      run: |
        cargo deb --target x86_64-unknown-linux-musl -- --locked
      if: contains(matrix.os, 'ubuntu')

    - name: macOS build
      env:
        RUSTFLAGS: --remap-path-prefix=${GITHUB_WORKSPACE}=/builds/dfinity
      run: |
        cargo build --locked --release
        cd target/release
        otool -L icx-proxy
      if: contains(matrix.os, 'macos')

    - name: Create tarball of binaries
      run: tar -zcC target/release -f binaries.tar.gz icx-proxy
      if: contains(matrix.os, 'macos')

    - name: Upload tarball
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: binaries.tar.gz
        asset_name: binaries-${{ matrix.name }}.tar.gz
        tag: ${{ env.SHA_SHORT }}
      if: contains(matrix.os, 'macos')

    - name: Upload deb
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: icx-proxy.deb
        asset_name: icx-proxy.deb
        tag: ${{ env.SHA_SHORT }}
      if: contains(matrix.os, 'ubuntu')
